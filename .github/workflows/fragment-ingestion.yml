# .github/workflows/fragment-ingestion.yml
name: Fragment Ingestion Pipeline

on:
  workflow_dispatch:
    inputs:
      batch_id:
        description: 'Batch ID to load (e.g., batch_20251012_170035)'
        required: true
        type: string
      dry_run:
        description: 'Dry run mode (no changes)'
        required: false
        type: boolean
        default: true

jobs:
  ingest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH tunnel
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

          ssh -4 -v -f -N \
            -o ServerAliveInterval=60 \
            -o ServerAliveCountMax=3 \
            -L 127.0.0.1:5432:127.0.0.1:5432 \
            $SSH_USER@$SSH_HOST

          for i in {1..30}; do
            if nc -zv 127.0.0.1 5432 2>&1 | grep -q succeeded; then
              echo "Tunnel ready!"
              exit 0
            fi
            sleep 2
          done
          exit 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd table-loader
          pip install -r requirements.txt

      - name: Create logs directory
        run: mkdir -p table-loader/logs

      - name: Run table loader
        env:
          DB_HOST: localhost
          DB_NAME: idhub
          DB_USER: idhub_user
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          S3_BUCKET: idhub-curated-fragments
        run: |
          cd table-loader
          python main.py \
            --batch-id ${{ github.event.inputs.batch_id }} \
            ${{ github.event.inputs.dry_run == 'false' && '--approve' || '' }}

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: loader-logs
          path: table-loader/logs/
          retention-days: 30
